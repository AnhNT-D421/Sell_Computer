/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.raven.form.attribute;

import com.raven.form.SanPham;
import com.raven.services.impl.ChatLieuServiceImpl;
import com.raven.viewmodels.ChatLieuResponse;
import java.io.File;
import java.io.FileOutputStream;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jdk.jfr.consumer.EventStream;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author nguye
 */
public class ChatLieuDialog extends javax.swing.JDialog {

    /**
     * Creates new form ChatLieuDialog
     */
    SanPham product = new SanPham();
    DefaultTableModel dtm = new DefaultTableModel();
    private ChatLieuServiceImpl service = new ChatLieuServiceImpl();

    public ChatLieuDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        dtm = (DefaultTableModel) tableChatLieu.getModel();
        showData(service.getTenChatLieu());
    }

    public void showData(List<ChatLieuResponse> clsr) {
        dtm.setRowCount(0);
        for (ChatLieuResponse clr : clsr) {
            dtm.addRow(new Object[]{
                clr.getId(), clr.getTenChatLieu()
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableChatLieu = new javax.swing.JTable();
        btnThemCL = new javax.swing.JButton();
        btnExportCL = new javax.swing.JButton();
        btnSuaCL = new javax.swing.JButton();
        txtMaCl = new javax.swing.JTextField();
        txtTenCl = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tableChatLieu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã thuộc tính", "Tên thuộc tính"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableChatLieu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableChatLieuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableChatLieu);

        btnThemCL.setText("Thêm");
        btnThemCL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemCLActionPerformed(evt);
            }
        });

        btnExportCL.setText("Làm mới");
        btnExportCL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportCLActionPerformed(evt);
            }
        });

        btnSuaCL.setText("Sửa");
        btnSuaCL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaCLActionPerformed(evt);
            }
        });

        txtMaCl.setEnabled(false);

        jLabel1.setText("Mã thuộc tính");

        jLabel2.setText("Tên thuộc tính");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Chất liệu");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(btnThemCL, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSuaCL, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(btnExportCL, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTenCl, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaCl, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(196, 196, 196))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtMaCl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTenCl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemCL)
                    .addComponent(btnSuaCL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnExportCL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(42, 42, 42))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnExportCLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportCLActionPerformed
        // TODO add your handling code here:
        txtTenCl.setText("");
        txtMaCl.setText("");
    }//GEN-LAST:event_btnExportCLActionPerformed
    public ChatLieuResponse getForm() {
        String ten = txtTenCl.getText();
        return new ChatLieuResponse(ten);
    }
    private void btnThemCLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemCLActionPerformed
        // TODO add your handling code here:
        if (validateForm()) {
            String ten = txtTenCl.getText();
            if (isChatLieuExisted(ten)) {
                JOptionPane.showMessageDialog(this, "Tên này đã tồn tại");
                return;
            }
            if (JOptionPane.showConfirmDialog(this, "Bạn có muốn thêm không ?") == 0) {
                ChatLieuResponse clr = getForm();
                if (service.add(clr)) {
                    JOptionPane.showMessageDialog(this, "Thêm thành công");
                    showData(service.getAll());
                    product.showChatLieu(service.getTenChatLieu());

                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Thêm thất bại");
                }
            }
        }
    }//GEN-LAST:event_btnThemCLActionPerformed
    public void setForm(ChatLieuResponse clr) {
        txtMaCl.setText(clr.getId() + "");
        txtTenCl.setText(clr.getTenChatLieu() + "");
    }

    public Boolean isChatLieuExisted(String tenThuocTinh) {
        for (ChatLieuResponse excl : service.getTenChatLieu()) {
            if (tenThuocTinh.equals(excl.getTenChatLieu())) {
                return true;
            }
        }
        return false;
    }

    boolean validateForm() {
        if (txtTenCl.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập tên chất liệu");
            return false;
        }
        if (!txtTenCl.getText().matches("[a-zA-Z0-9\\sàáạảãâầấậẩẫăằắặẳẵèéẹẻẽêềếệểễđòóọỏõôồốộổỗơờớợởỡùúụủũưừứựửữỳỹỷýÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴÈÉẸẺẼÊỀẾỆỂỄĐÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲỸỶÝiíìịỉĩIÍỈỊÌ]+")) {
            JOptionPane.showMessageDialog(this, "Tên chất liệu chỉ được chứa số, chữ và khoảng trắng");
            return false;
        }
        return true;
    }
    private void tableChatLieuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableChatLieuMouseClicked
        // TODO add your handling code here:
        int row = tableChatLieu.getSelectedRow();
        ChatLieuResponse cl = service.getAll().get(row);
        setForm(cl);
        String macl = tableChatLieu.getValueAt(row, 0).toString();
        String tencl = tableChatLieu.getValueAt(row, 1).toString();
    }//GEN-LAST:event_tableChatLieuMouseClicked

    private void btnSuaCLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaCLActionPerformed
        // TODO add your handling code here:
        int row = tableChatLieu.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Bạn phải chọn 1 dòng");
            return;
        }
        if (validateForm()) {
            for (ChatLieuResponse cl : service.getAll()) {
                if (!cl.getTenChatLieu().equals(txtTenCl.getText()) && String.valueOf(cl.getId()).equals(txtMaCl.getText())) {
                    JOptionPane.showMessageDialog(this, "Tên chất liệu này đã có bạn có thể sử dụng lại");
                    return;
                }
            }
            int id = (int) tableChatLieu.getValueAt(row, 0);
            ChatLieuResponse kh = getForm();
            if (service.update(kh, id)) {
                JOptionPane.showMessageDialog(this, "Thành công");
                showData(service.getAll());
            } else {
                JOptionPane.showMessageDialog(this, "Thất bại");
            }
        }
    }//GEN-LAST:event_btnSuaCLActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChatLieuDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChatLieuDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChatLieuDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChatLieuDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ChatLieuDialog dialog = new ChatLieuDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExportCL;
    private javax.swing.JButton btnSuaCL;
    private javax.swing.JButton btnThemCL;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableChatLieu;
    private javax.swing.JTextField txtMaCl;
    private javax.swing.JTextField txtTenCl;
    // End of variables declaration//GEN-END:variables
}
